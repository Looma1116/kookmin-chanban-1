import {
  getFirestore,
  collection,
  query,
  orderBy,
  limit,
  doc,
  where,
  getDocs,
  getDoc,
} from "firebase/firestore";
import { getApps, initializeApp } from "firebase/app";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useEffect, useState } from "react";
import AgendaCard from "../components/agendaCard";
import styles from "../styles/Home.module.css";
import { useRecoilState } from "recoil";
import { searchIsClicked } from "../components/recoil/recoil";
import logo from "../public/logo@4x.png";

export default function Home() {
  const db = getFirestore();
  const [isLoaded, setIsLoaded] = useState(false);
  const [agendas, setAgendas] = useState([]);
  const [isClicked, setIsClicked] = useRecoilState(searchIsClicked);

  // 투표수 상위 10개 내림차순
  const agendaRef = query(collection(db, "agenda"));
  const q = query(agendaRef, orderBy("numVote", "desc"), limit(10));

  useEffect(() => {
    setIsClicked(false);
    fetchData();
  }, []);

  const fetchData = async () => {
    const agendaSnapshot = await getDocs(q);
    console.log("agendaSnapshot done!");
    const voteData = {};
    agendaSnapshot.forEach(async (document) => {
      //const voteRef = collection(db, "agenda", document.id, "vote");
      console.log("voteRef done!");

      setAgendas(
        agendas.concat({
          id: document.id,
          ...document.data(),
        })
      );
    });
    if (!isLoaded) {
      setIsLoaded(true);
      console.log("datas are loaded!");
    }
  };
  console.log(agendas);

  return (
    <div className={styles.container}>
      <Head>
        <title>성숙한 대한민국! | 국민찬반</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/ICON.ico" />
      </Head>

      <main className={styles.main}>
        <span className={styles.logoContainer}>
          <Image src={logo} alt="국민찬반" height={75} width={270} />
        </span>
        <div className={styles.cardSection}>
          {agendas.map((data) => {
            return (
              <div key={data.id}>
                <Link href={`/agenda/${data.id}`}>
                  <a>
                    <AgendaCard props={data} />
                  </a>
                </Link>
              </div>
            );
          })}
        </div>
      </main>
    </div>
  );
}

/*
export async function getStaticProps() {
  // 투표수 상위 10개 내림차순
  const agendaRef = query(collection(db, "agenda"));
  const q = query(agendaRef, orderBy("numVote", "desc"), limit(10));
  const agendaSnapshot = await getDocs(q);
  console.log("agendaSnapshot done!");

  let voteData = {};
  let agendas = [];

  agendaSnapshot.forEach(async (document) => {
    const voteRef = collection(db, "agenda", document.id, "vote");
    console.log("voteRef done!");

    const voteSnapshot = await getDocs(voteRef);
    voteSnapshot.forEach((voteDoc) => {
      voteData = voteDoc.data();
    });
    agendas.concat({
      id: document.id,
      ...document.data(),
      numAgree: voteData.numAgree,
      numAlternative: voteData.numAlternative,
      numDisagree: voteData.numDisagree,
    });
    console.log(agendas);
  });

  return {
    props: {
      agendas,
    },
  };
}
*/
